//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/UInavegation.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UInavegation: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UInavegation()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UInavegation"",
    ""maps"": [
        {
            ""name"": ""MenuNavegation"",
            ""id"": ""894c5e0c-3216-4504-bdf3-45b443b65d58"",
            ""actions"": [
                {
                    ""name"": ""MenuPrincipal"",
                    ""type"": ""Button"",
                    ""id"": ""9c68bb84-bb0e-4f15-8d44-5917bc0ee736"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuAyuda"",
                    ""type"": ""Button"",
                    ""id"": ""01d97b8b-7ea3-46f9-802a-2fc972cd32f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""fba4f197-c355-472d-b797-254fabb025d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Salir"",
                    ""type"": ""Button"",
                    ""id"": ""559a9594-34ee-440c-bdb7-8366495203ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""VolverAlMenu"",
                    ""type"": ""Button"",
                    ""id"": ""28d980c5-4d42-4dde-a98c-3642b3cf5cbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""578f1bad-c31c-44d2-9d40-e48c1838f013"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuPrincipal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99d52d0d-920c-4054-aaec-740147e2c86f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuAyuda"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb67f3b5-f150-455d-8d1d-d1d991b61122"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7b3611f-ff86-46c9-a946-b94cf086c9be"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Salir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa71607f-3e66-4231-aaa9-144691cbf596"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""VolverAlMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MenuNavegation
        m_MenuNavegation = asset.FindActionMap("MenuNavegation", throwIfNotFound: true);
        m_MenuNavegation_MenuPrincipal = m_MenuNavegation.FindAction("MenuPrincipal", throwIfNotFound: true);
        m_MenuNavegation_MenuAyuda = m_MenuNavegation.FindAction("MenuAyuda", throwIfNotFound: true);
        m_MenuNavegation_Pausa = m_MenuNavegation.FindAction("Pausa", throwIfNotFound: true);
        m_MenuNavegation_Salir = m_MenuNavegation.FindAction("Salir", throwIfNotFound: true);
        m_MenuNavegation_VolverAlMenu = m_MenuNavegation.FindAction("VolverAlMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MenuNavegation
    private readonly InputActionMap m_MenuNavegation;
    private List<IMenuNavegationActions> m_MenuNavegationActionsCallbackInterfaces = new List<IMenuNavegationActions>();
    private readonly InputAction m_MenuNavegation_MenuPrincipal;
    private readonly InputAction m_MenuNavegation_MenuAyuda;
    private readonly InputAction m_MenuNavegation_Pausa;
    private readonly InputAction m_MenuNavegation_Salir;
    private readonly InputAction m_MenuNavegation_VolverAlMenu;
    public struct MenuNavegationActions
    {
        private @UInavegation m_Wrapper;
        public MenuNavegationActions(@UInavegation wrapper) { m_Wrapper = wrapper; }
        public InputAction @MenuPrincipal => m_Wrapper.m_MenuNavegation_MenuPrincipal;
        public InputAction @MenuAyuda => m_Wrapper.m_MenuNavegation_MenuAyuda;
        public InputAction @Pausa => m_Wrapper.m_MenuNavegation_Pausa;
        public InputAction @Salir => m_Wrapper.m_MenuNavegation_Salir;
        public InputAction @VolverAlMenu => m_Wrapper.m_MenuNavegation_VolverAlMenu;
        public InputActionMap Get() { return m_Wrapper.m_MenuNavegation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuNavegationActions set) { return set.Get(); }
        public void AddCallbacks(IMenuNavegationActions instance)
        {
            if (instance == null || m_Wrapper.m_MenuNavegationActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenuNavegationActionsCallbackInterfaces.Add(instance);
            @MenuPrincipal.started += instance.OnMenuPrincipal;
            @MenuPrincipal.performed += instance.OnMenuPrincipal;
            @MenuPrincipal.canceled += instance.OnMenuPrincipal;
            @MenuAyuda.started += instance.OnMenuAyuda;
            @MenuAyuda.performed += instance.OnMenuAyuda;
            @MenuAyuda.canceled += instance.OnMenuAyuda;
            @Pausa.started += instance.OnPausa;
            @Pausa.performed += instance.OnPausa;
            @Pausa.canceled += instance.OnPausa;
            @Salir.started += instance.OnSalir;
            @Salir.performed += instance.OnSalir;
            @Salir.canceled += instance.OnSalir;
            @VolverAlMenu.started += instance.OnVolverAlMenu;
            @VolverAlMenu.performed += instance.OnVolverAlMenu;
            @VolverAlMenu.canceled += instance.OnVolverAlMenu;
        }

        private void UnregisterCallbacks(IMenuNavegationActions instance)
        {
            @MenuPrincipal.started -= instance.OnMenuPrincipal;
            @MenuPrincipal.performed -= instance.OnMenuPrincipal;
            @MenuPrincipal.canceled -= instance.OnMenuPrincipal;
            @MenuAyuda.started -= instance.OnMenuAyuda;
            @MenuAyuda.performed -= instance.OnMenuAyuda;
            @MenuAyuda.canceled -= instance.OnMenuAyuda;
            @Pausa.started -= instance.OnPausa;
            @Pausa.performed -= instance.OnPausa;
            @Pausa.canceled -= instance.OnPausa;
            @Salir.started -= instance.OnSalir;
            @Salir.performed -= instance.OnSalir;
            @Salir.canceled -= instance.OnSalir;
            @VolverAlMenu.started -= instance.OnVolverAlMenu;
            @VolverAlMenu.performed -= instance.OnVolverAlMenu;
            @VolverAlMenu.canceled -= instance.OnVolverAlMenu;
        }

        public void RemoveCallbacks(IMenuNavegationActions instance)
        {
            if (m_Wrapper.m_MenuNavegationActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenuNavegationActions instance)
        {
            foreach (var item in m_Wrapper.m_MenuNavegationActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenuNavegationActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenuNavegationActions @MenuNavegation => new MenuNavegationActions(this);
    public interface IMenuNavegationActions
    {
        void OnMenuPrincipal(InputAction.CallbackContext context);
        void OnMenuAyuda(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnSalir(InputAction.CallbackContext context);
        void OnVolverAlMenu(InputAction.CallbackContext context);
    }
}
